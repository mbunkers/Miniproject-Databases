/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import static Controller.Main.controller;
import Model.Databaseconnector;
import Model.Gedachte;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.*;

/**
 *
 * @author Marc Bunkers, Fabian Claasen
 */
public class Menubalk extends JMenuBar implements ActionListener, KeyListener{

    private JMenuItem afsluiten, acties, toevoegen, uitloggen, editMenu, kalenderOverzicht, 
                      wisGedachte, editGedachte, addProject, deleteProject, editProject;
    private JMenu file, edit, gebruiker, kalender, gedachte, project;
    
    private JTextField zoekBalk;
    
    private Gedachte thought;
    private Databaseconnector dc = new Databaseconnector();

    public Menubalk() {
        makeItems();
        add(file);
        file.add(afsluiten);

        add(edit);
        edit.add(editMenu);
        edit.add(acties);

        edit.add(gedachte);
        gedachte.add(toevoegen);
        gedachte.add(editGedachte);
        gedachte.add(wisGedachte);
        
        edit.add(project);
        project.add(addProject);
        project.add(editProject);
        project.add(deleteProject);
        
        add(kalender);
        kalender.add(kalenderOverzicht);

        add(gebruiker);
        gebruiker.add(uitloggen);

        add(zoekBalk);
    }

    private void makeItems() {
        zoekBalk = new JTextField();
        zoekBalk.addKeyListener(this);
        
        file = new JMenu("File");
        afsluiten = new JMenuItem("Afsluiten");
        afsluiten.addActionListener(this);
        
        gedachte = new JMenu("Gedachte");
        editGedachte = new JMenuItem("Edit gedachte");
        wisGedachte = new JMenuItem("Wis gedachte");
        
        project = new JMenu("Project");
        addProject = new JMenuItem("Voeg project toe");
        editProject = new JMenuItem("Bewerk project");
        deleteProject = new JMenuItem("Verwijder project");
        
        acties = new JMenuItem("Acties");
        acties.addActionListener(this);
        edit = new JMenu("Edit");
        editMenu = new JMenuItem("Editmenu");
        editMenu.addActionListener(this);
        kalender = new JMenu("Kalender");
        kalenderOverzicht = new JMenuItem("Kalenderoverzicht");
        toevoegen = new JMenuItem("Gedachte toevoegen");
        toevoegen.addActionListener(this);
        gebruiker = new JMenu("Gebruiker");
        uitloggen = new JMenuItem("Uitloggen");
        uitloggen.addActionListener(this);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getActionCommand().equals("Acties")) {
            controller.add(new Actiescreen());
        }

        if (e.getActionCommand().equals("Editmenu")) {
            //controller.add(new EditScreen());
            System.out.println("Editmenu");
            JDialog dialog = new JDialog();
            dialog.setBounds(0, 0, 300, 500);

            dialog.add(new EditScreen(1));
            dialog.pack();
            dialog.setLocationRelativeTo(null);
            dialog.setVisible(true);
        }

        if (e.getActionCommand().equals("Kalenderoverzicht")) {
            controller.add(new Kalenderscreen());
        }

        if (e.getActionCommand().equals("Gedachte toevoegen")) {
            System.out.println("Gedachte toevoegen");
            JDialog dialog = new JDialog();
            dialog.setTitle("Gedachte Toevoegen");
            dialog.setModal(true);
            dialog.setBounds(0, 0, 300, 500);

            dialog.add(new EditScreen(2));
            dialog.pack();
            dialog.setLocationRelativeTo(null);
            dialog.setVisible(true);
            dialog.validate();
        }
        
        if (e.getActionCommand().equalsIgnoreCase("Wis gedachte")){
            thought.wisGedachte(8);
        }

        if (e.getActionCommand().equals("Gebruiker")) {
        }

        if (e.getActionCommand().equals("Uitloggen")) {
            controller.logOff();
        }

        if (e.getActionCommand().equals("Afsluiten")) {
            controller.quit();
        }
    }

    @Override
    public void keyTyped(KeyEvent e) {
        //
    }

    @Override
    public void keyPressed(KeyEvent e) {
        if(e.getKeyCode() == KeyEvent.VK_ENTER){
            dc.search(zoekBalk.getText());
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {
        //
    }
}
